name: Run GBP

on:
  push

env:
  RELEASE: unstable
  PROJECT_NAME: cros3

jobs:
  run-gbp:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          path: source_dir

      - name: Get Time
        id: get-time
        run: |
          echo "::set-output name=datetime::$(/bin/date --iso-8601=seconds)"
        shell: bash

      - uses: actions/cache@v2
        with:
          path: .ccache
          key: ${{ runner.os }}-${{ env.RELEASE }}-ccache-${{ steps.get-time.outputs.datetime }}
          restore-keys: |
            ${{ runner.os }}-${{ env.RELEASE }}-ccache-

      - name: Build Package
        uses: docker://registry.salsa.debian.org/salsa-ci-team/pipeline/gbp:latest
        with:
          entrypoint: /bin/bash
          args: source_dir/.scripts/buildpkg.sh

      - name: Upload Package
        uses: actions/upload-artifact@v2
        with:
          name: ${{ runner.os }}-${{ env.RELEASE }}-debpkg
          path: debian/output/*
          retention-days: 2


  create-aptly-repo:
    needs: [ run-gbp ]
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          path: source_dir

      - name: Download all Debian packaging workflow run artifacts
        uses: actions/download-artifact@v2

      - name: Prepare aptly repo
        uses: docker://registry.salsa.debian.org/salsa-ci-team/pipeline/aptly
        with:
          entrypoint: /bin/bash
          args: source_dir/.scripts/prepaptly.sh

      - name: Upload Repo
        uses: actions/upload-artifact@v2
        with:
          name: ${{ runner.os }}-${{ env.RELEASE }}-repo
          path: debrepo.tar.gz
          retention-days: 2

  deploy-aptly-repo:
    needs: [ create-aptly-repo ]
    runs-on: ubuntu-20.04

    steps:
      - name: Download all Debian packaging workflow run artifacts
        uses: actions/download-artifact@v2

      - name: Filter out repo data
        run: |
          mkdir -p publish/apt
          for TAR in *-repo/*.tar.*; do tar xf $TAR -C publish/apt/; done

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        #if: endsWith(github.event.ref, '/master')
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: ./publish
          force_orphan: true
